DOCUMENTATION FOR PROJECT METRIX

DTG 20180131.1255

I. Purpose; 

Metrix imports data from csv files downloaded from two sources: The analytical site Zacks.com and the ThinkOrSwim platform at my brokerage, TDAmeritrade.com, combines tables and eliminates unneeded columns, links the tables together use the stock symbols column as the key, analyzes the data according to my method of using metrics, and writes a report to disk as an csv file suitable for import into Google Sheets. Updated daily in the morning.

II. Major structures:
Metrix uses three major data sets as inpout and three objects based on a single class to hold and manipulate in imported data
within the code.

	A. Earnings, a calendar of earnings, typically spanning a week. Note that it has earnings times of day (am, pm, xm) but
	not the earnings date, which comes from the data referenced in II.B below. The number records varies depending upon
	whether an earnings season is in progress. Updated once a week.
	
		1. Source: Zacks' earnings calendar, consisting of five files saved manually to the disk and then combined using the 		cp command.
		2. Import file: e.csv
		3. Target object: earns.
		
	B. Zacks, a table of analytics, especially the Earnings Surprise Predictor and Zacks Rank. It contains the date of the
	earnings announcement (in the form yyyymmdd) but not the time of day. Typically produces about 7,000 records.
	
		1. Source: Zacks Stock Screener, using a custom screen that limits results to symbols with a volume of 500 shares or 			greater. 
		2. Import file: z.csv
		3. Target object: zacks.
		
	C. Market, 
		


III. External dependacies: 


	
	A. Metrix performs these jobs:
		1) imports a specific set of csv tables into pandas dataframes. The tables are
		downloaded before metrix is invoked. The tables are z.csv and e.csv.
			a) First, an inner join
				i) z.csv :: Daily analysis data from Zacks, updated daily in the morning
				approximately 7,000 records
				ii) e.csv :: Earnings schedule data from Zacks, updated once weekly 
				Up to approximately 2,000 records
			b) Result: earns01.csv
		b) Second join, a left outer join:
			i) zearns.csv (the left, all records retained)
			ii) w.csv :: A list of symbols having weekly options, updated as needed
				to capture changes
			iii) binary.csv  :: A list of brokerage-recognizable symbols corresponding to 
				binary options on Nadex
			iv) The combined table is reconstructed with flag fields marking symbols 
				having weekly options and symbols used to analyze binary options.
			Result: earns_interim.csv
		c) A manual stage to allow for download of the brokerage data.
			i) metrix Writes the full list of symbols in zearns_interim to file syms.csv
			ii) metrix pauses for manual creation of the market-data table m.csv
			iii) metrix resumed when notified by the operator.		
		c) Third join, a left outer join:
			i) earns_interim.csv (the left, all records retained as an error check)			
			ii) m.csv :: Current market information :: updated as needed, from 
				brokerage ThinkOrSwim
			Result: Earns mmdd-mmdd, where mmdd are the start and end dates of the
				period covered, derived programmatically from the minimum and maximum
				earnings announcements dates in the set. For example, the file for the
				week of Jan. 29 through Feb. 2, 2018 would be styled "Earns 0129-0202".
	2) Analyzes the combined data, restructuring the Earns... table, scoring the
		metrics used for analysis and restructuring the Earns... table to accommodate
		the analytical results, all in csv format. (Details to come.)
	3) Program terminates, and operator uploads it to Google Sheet as input into
		the trading routine.
